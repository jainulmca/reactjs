****************************************************************************************
========================================================================================
CHAPTER 01 - INCEPTION
========================================================================================
****************************************************************************************

Q.1 - What is Emmet?
---------------------------------------------------------------------------------------
Ans - Emmet is a free add-on for your text editor. It allows you to type shortcuts that are then expanded into full pieces of code. By using Emmet, developers type less, they save both on keystrokes and time. Emmet is developed and optimized for web-developers whose workflow depends on HTML/XML and CSS, but can be used with programming languages too.
Examples:

-> write html:5 enter gives whole <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
.....
</body>
</html>

-> write ul#nav>li.items*2>a{Item $} gives
<ul id="nav">
	<li class="item1"><a href="">Item 1</a></li>
	<li class="item2"><a href="">Item 2</a></li>
</ul> 


Q.2 - Difference between a Library and Framework.
---------------------------------------------------------------------------------------
Ans - Both framework and libraries are code written by someone else that is used to help to solve common problems.
A framework inverts the control of the program. It tells the developer what they need. A library doesn't. The programmer calls the library where and when they need it.
The degree of freedom a library or framework gives the developer will dictate how "opionionated" it is.
Framework -> calls -> code -> calls Library

Q.3 - What is CDN? Why do we use it?
---------------------------------------------------------------------------------------
Content delivery network, A CDN is essentially a network of geographically dispersed servers. Each CDN node (also called Edge Server) caches the static content of a site like the images, CSS/JS files and other structural components. The majority of an end-user’s page load time is spent on retrieving this content, and so it makes sense to provide these “building blocks” of a site in as many server nodes as possible, distributed throughout the world.

When a user requests your site, the node closest in proximity to user will deliver the static content, ensuring the shortest distance for the data to travel (reduced latency), therefore providing the fastest site experience.

The number one reason for using a CDN is to improve your user’s experience in terms of speed, and as we know – speed matters!

Ensuring a consistent experience for all your users is important.

A website may be hosted in a particular region, but if the majority of its users are coming from an entirely different region – e.g., if your site is hosted in North America, GTmetrix might report fast speeds based on our default test location, but if a good chunk of your users come from Europe, their speed will not be as fast as you experience it to be.

Q.4 - Why is React known as React?
---------------------------------------------------------------------------------------
React was developed for applications (Facebook) that have constantly changing data. Since React is a front-end framework or the “View” in MVC, this means that as the user clicks around and changes the app's data, the view should “react” or change with those user events.

Q5. What is crossorigin in script tag?
---------------------------------------------------------------------------------------
The crossorigin attribute, valid on the <audio>, <img>, <link>, <script>, and <video> elements, provides support for CORS, defining how the element handles cross-origin requests, thereby enabling the configuration of the CORS requests for the element's fetched data. Depending on the element, the attribute can be a CORS settings attribute.

The crossorigin content attribute on media elements is a CORS settings attribute.
These attributes are enumerated, and have the following possible values:
anonymous, use-credentials, "", 

Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own from which a browser should permit loading resources.

Q6. What is diference between React and ReactDOM
---------------------------------------------------------------------------------------
React library is responsible for creating views and ReactDOM library is responsible to actually render UI in the browser.

The react-dom package provides DOM-specific methods that can be used at the top level of your app and as an escape hatch to get outside the React model if you need to.

Q7. What is difference between react.development.js and react.production.js files via CDN?
---------------------------------------------------------------------------------------
react.development.js code have unminified code that developer can understand the code.
react.production.js cod have minified version that is light and will loade faster.

Q8. What is async and defer?
---------------------------------------------------------------------------------------
async 
 - Scripts are fetched asynchronously and executed immediately
 - Usually the DOMContentLoaded event waits for all scripts to execute, except for async scripts.So DOMContentLoaded does not wait for an async script
 - Scripts not guranteed to execute in order
 - Use for 3rd-party scripts where order doesn't matter (e.g. Google Analytics)

defer
 - Scripts are fetched asynchronously and executed after the HTML is completely parsed
 - DOMContentLoaded event fires after defer script is executed
 - Scripts are executed in order
 - This is overall the best solution! Use for your own scripts, and when order matters (e.g including a library)


Q9. What is React.createElement()?
---------------------------------------------------------------------------------------
React element is an Object. It has three parameters.
React.createElement(
  type,
  [props],
  [...children]
)

